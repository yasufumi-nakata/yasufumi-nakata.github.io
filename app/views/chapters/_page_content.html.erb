<% content_for :stylesheet do -%>
  <%= skip_stylesheet_link_tag "themes/cupertino/ui.dialog.css" %>
  <%= skip_stylesheet_link_tag "themes/cupertino/ui.tabs.css" %>
<% end -%>

<div class="current-title">
  <% form_for(:chapter, (defined?(chapter) ? chapter : @chapter), :url=>url, :html=>option) do |f| %>
    <div class="content">
      <div class="preview">
        <% if page.format_type == "hiki" %>
          <ul class="float">
            <li class="hide" style="font-size:12px"><%= link_to(_("Hide preview"), '#', :class=>'operation')%></li>
            <li class="show" style="font-size:12px"><%= link_to(_("Show preview"), '#', :class=>'operation')%></li>
            <span class="operation trigger" style="font-size:12px"><%= _("Link Palette")%></span>
            <span class="page-menu"><%= link_to(_("History"), wiki_histories_path(page.title)) %></span>
          </ul>
        <% end -%>
      </div>

      <span id="share_file_trigger" class="pointer link"><span class="ss_sprite ss_attach">&nbsp;</span><%= _('Insert file or embed in text body') %></span>
      <%= text_area_tag("chapter[content]", sanitize_and_unescape_for_richtext(defined?(chapter) ? chapter.data : ""), :id=>"chapter_content", :cols => 90, :rows => 20) %>
      <%= hidden_field_tag :position_id, insert_num if defined?(insert_num) %>
      <% ckeditor "chapter[content]", 'toolbar' => "Entry" %>
    </div>

    <div class="submit">
      <span class="notice" style="display:none"><%= _("Modified, not need to save.")%></span>
      <%= submit_tag(_("Update page"))%>
      <%= link_to(h(_("Display page")), wiki_path(page.title), :class => "back") %>
    </div>
    <div class="clear"></div>
  <% end -%>
</div>

<% content_for :javascript_initializers do %>
  $j('div#share_file_dialog').dialog({
    bgiframe: true,
    autoOpen: false,
    width: 500,
    height: 350,
    open: function() {
      loadShareFiles({});
      loadNewShareFileForm();
      $j('#tabs').tabs().show();
    }
  })

  var loadNewShareFileForm = function(){
    var submitCallback;
    $j('#share_file_new').html('');
    var indicator = $j('<span><%= skip_image_tag 'indicator.gif' %></span>');
    indicator.appendTo($j('#share_file_new')).show();
    var src = '<%= url_for(:controller => 'attachments', :action => 'new', :wiki_id => page.title, :ajax_upload => 1, :escape => false) %>';
    $j('#share_file_new').append(
      $j('<ul></ul>').addClass('messages')
    ).append(
      $j("<iframe></iframe>").attr("src", src).load(function(){
        var form = $j(this.contentWindow.document).find("form");
        form.submit(function() {
          var indicator = form.find("td.indicator img").show();
          form.get(0).submit();
          indicator.hide();
          var file = form.find("input[type=file]");
          file.focus();
          submitCallback = function(){
            form.get(0).reset();
          };
          return false;
        });
        indicator.remove();
      })
    );
    var targetIFrame = $j("<iframe></iframe>").attr({src: '/blank.html', name: '<%= IframeUploader::UPLOAD_KEY %>'})
                       .one("load", function(){ $j(this).load(afterLoadCallback); });
    $j('#share_file_new').append(
      // HTTPS環境で、IE6を利用するとtargetが空だとHTTPへのアクセスと判断してアラートが表示されるため
      // http://support.microsoft.com/kb/261188/ja
      $j("<div></div>").addClass('target').append(targetIFrame)
    );

    // IE6対策
    targetIFrame.get(0).contentWindow.name = '<%= IframeUploader::UPLOAD_KEY %>';

    var afterLoadCallback = function(){
      if(submitCallback){submitCallback.call();}
      var doc = targetIFrame.get(0).contentDocument ? targetIFrame.get(0).contentDocument : targetIFrame.get(0).contentWindow.document;
      var response = doc.body.innerHTML;
      var json = eval('(' + response + ')');
      var status = json['status'];
      $j('ul.messages').html('');
      if ( status == '200' ) {
        $j.each(json['messages'], function(i, msg){
          $j('ul.messages').append($j('<li></li>').addClass('notice').text(msg));
        });
        loadShareFiles({});
      } else {
        $j.each(json['messages'], function(i, msg){
          $j('ul.messages').append($j('<li></li>').addClass('error').text(msg));
        });
      }
    };
  }

  var loadShareFiles = function(requestData){
    $j('div#share_file_list').html('');
    var indicator = $j('<span><%= skip_image_tag 'indicator.gif' %></span>');
    indicator.appendTo('div#share_file_list').show();
    var url = '<%= attachments_url(:id => (defined?(chapter) ? chapter : @chapter).id, :wiki_id => page.title,:format => :js) %>';
    $j.getJSON(url, requestData, function(data, stat) {
      var attachments = data['attachments'];
      if(attachments.length == 0){
        var message  = $j('ul.messages').append($j('<li></li>').addClass('error').text("このページにはまだファイルは登録されていません"));
        indicator.remove();
        message.appendTo('div#share_file_list').show();
        return;
      };

      var thead = $j('<thead></thead>');
      thead.append(shareFileToTableHeader());
      var tbody = $j("<tbody></tbody>");
      $j.each(attachments, function(_num_, attachment){
        var current_attachment = attachment['attachment'];
        tbody.append(shareFileToTableRow(current_attachment));
      });
      $j('div#share_file_list').append(
        paginate(data['pages'])
      ).append(
        $j("<table></table>")
        .append(thead)
        .append(tbody)
      ).append(
        paginate(data['pages'])
      );

      $j('img.fit_image').fitimage({ placeholder: relative_url_root + '/images/skip/jquery/fitimage/spacer.gif' });
      indicator.remove();
    });
  };

  var shareFileToTableHeader = function() {
    var tr = $j('<tr></tr>');
    tr.append($j('<th></th>').text('<%= _('Thumbnail') %>'));
    tr.append($j('<th></th>'));
    return tr;
  };

  var shareFileToTableRow = function(data){
    var tr = $j("<tr></tr>");
    tr.append($j("<td class='thumbnail'></td>").append(insertThumbnail(data)));
    var insertTd = $j("<td class='insert'></td>");
    insertTd.append(insertLink(data));
    if(data['file_type'] == 'image')
      insertTd.append(insertImageLink(data));
    if(data['file_type'] == 'flv' || data['file_type'] == 'swf')
      insertTd.append(insertEmbedLink(data));
    tr.append(insertTd);
    return tr;
  };

  var insertThumbnail = function(data){
    var filename = data['filename'];
    var extension = filename.toLowerCase().split('.')[1];
    if($j.inArray(extension, <%= ShareFile::CONTENT_TYPE_IMAGES.keys.to_json %>) >= 0) {
      var src = data['inline'];
      if(src){
        var img = $j("<img></img>").attr("src", src).attr("alt", filename).addClass('pointer');
        return img.clone().attr("style", "height: 72px; width: 72px;").click(function(){
          insertToRichEditor(img.clone());
        }).show();
      }else{
        return $j("<span></span>").text(filename.substr(0,32));
      }
    } else {
      return $j("<span></span>").text(filename.substr(0,32));
    }
  };

  var paginate = function(pages){
    var paginate_actions = $j('<div class="paginate"></div>');
    paginate_actions.append($j('<span class="info"></span>').text(pages['current'] + '/' + pages['last'] + 'page'));
    if(pages['previous'] != null){
      paginate_actions.append(
        $j('<span class="first_link link pointer"></span>').text('<%= _('First page') %>').click(function() {
          loadShareFiles({page: pages['first']});
        })
      );
      paginate_actions.append(
        $j('<span class="previous_link link pointer"></span>').text('<%= _('« Previous') %>').click(function() {
          loadShareFiles({page: pages['previous']});
        })
      );
    }
    if(pages['next'] != null){
      paginate_actions.append(
        $j('<span class="next_link link pointer"></span>').text('<%= _('Next »') %>').click(function() {
          loadShareFiles({page: pages['next']});
        })
      );
      paginate_actions.append(
        $j('<span class="last_link link pointer"></span>').text('<%= _('Last page') %>').click(function() {
          loadShareFiles({page: pages['last']});
        })
      );
    }
    return paginate_actions;
  };

  var insertEmbedLink = function(data){
    return $j("<span></span>").text('<%= _('Insert embed') %>').addClass("insert_link link pointer").click(function(){
      var html = data['insert_tag'];
      CKEDITOR.instances.chapter_content.insertHtml(html);
    });
  };

  var insertImageLink = function(data){
    var filename = data['file_name'];
    var src = data['src'];
    return $j("<span></span>").text('<%= _('Insert image') %>').addClass("insert_link link pointer").click(function(){
      var img = $j("<img></img>").attr("src", src).attr("alt", filename).addClass('pointer');
      insertToRichEditor(img.clone());
    });
  };

  var insertToRichEditor = function(elem){
    CKEDITOR.instances.chapter_content.insertHtml(elem.wrap('<span></span>').parent().html());
  };

  var insertLink = function(data){
    var filename = data['filename'];
    var src = data['inline'];
    return $j("<span></span>").text('<%= _('Insert link') %>').addClass("insert_link link pointer").click(function(){
      insertToRichEditor($j("<a></a>").text(filename).attr("href", src));
    });
  };

  $j('#share_file_trigger').click(function(){
    $j('div#share_file_dialog').dialog('open');
  });

<% end %>
