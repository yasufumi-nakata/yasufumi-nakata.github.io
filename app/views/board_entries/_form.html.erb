<% content_for :stylesheet do -%>
<style type="text/css">
table {
  table-layout: auto;
}
div.input_line {
  border-bottom: 1px dotted silver;
  margin-bottom: 2px;
  padding-bottom: 2px;
}
div.input_line textarea {
  width: 98%;
}
</style>
<% end -%>

<%= template_error_messages_for 'board_entry' %>

<%= hidden_field_tag 'entry_type', h(params[:entry_type]) %>
<%= hidden_field 'board_entry', 'entry_type' %>
<%= hidden_field 'board_entry', 'symbol' %>
<%= hidden_field 'board_entry', 'lock_version' %>

<% unless @board_entry.is_stock_entry? -%><%# 文書でないなら %>
<div class="input_line">
  <div class="input_label"><%= label(:board_entry, :aim_type, _('Types')) %></div>
  <% aim_types = BoardEntry.enable_aim_types.map{|type| [s_("BoardEntry|Aim type|Desc|#{type}"), type]} -%>
  <div class="input_value"><%= select :board_entry, :aim_type, options_for_select(aim_types, @board_entry.aim_type) %></div>
  <div class="clear_left"></div>
</div>

<div class="input_line">
  <div class="input_label"><%= label(:board_entry, :category, _('Tags')) -%></div>
  <div class="input_value"><%= text_field 'board_entry', 'category', :size => '60', :value => @board_entry.category %>
    <div id="category_box" style="display:none;">
      <div id="candidates_list"><p><%= _('Multiple values can be given in foo,bar format')%></p></div>
      <div style="font-size:10pt; font-weight:bold;"><%= _('Your tags: ')%></div><div id="tags_list" style="margin-bottom:5px;"></div>
      <div style="font-size:10pt; font-weight:bold;"><%= _('Recommended tags: ')%></div><div id="std_tags_list" style="margin-bottom:5px;"></div>
      <div style="font-size:10pt; font-weight:bold;"><%= _('Recent tags of other users: ')%></div><div id="user_tags_list" style="margin-bottom:5px;"></div>
    </div>
  </div>
  <div style="clear: left"></div>
</div>
<% else -%>
  <% unless @board_entry.is_root_stock_entry? -%>
<div class="input_line">
  <div class="input_label"><%= label(:board_entry, :aim_type, _('level')) %></div>
  <% parent_title = parent_stock_entry_title(@board_entry.parent_id) unless @board_entry.parent_id.blank? %>
  <div class="input_value"><%= parent_title %></div>
  <div class="clear_left"></div>
</div>
  <% end -%>
<%= hidden_field 'board_entry', 'aim_type' %>
<%= hidden_field 'board_entry', 'parent_id', 'value' => @board_entry.parent_id %>
<% end -%>

<div class="input_line">
  <div class="input_label"><%= label(:board_entry, :title, _('Title')) -%></div>
  <div class="input_value"><%= text_field 'board_entry', 'title', :size =>60 %></div>
  <div style="clear: left"></div>
</div>

<div class="input_line">
  <div class="input_label">
    <% if @board_entry.is_root_stock_entry? -%>
      <%= label_tag 'contents_hiki', _('Description of index') %>
    <% else -%>
      <%= label_tag 'contents_hiki', _('Contents') %>
    <% end -%>
  </div>
  <%= render :partial => "board_entries/edit_contents" %>
</div>

<div class="input_line input_option invisible">
  <div class="input_label" style="height: 30px;"><%= _('Date')%></div>
  <div class="input_value">
    <p><%= datetime_select 'board_entry', 'date', :use_month_numbers => true -%></p>
    <p><a href="#" onclick="setCurrentDatetime('board_entry', 'date');return false;"><%= _('[Set current time]')%></a>
      <%= check_box 'board_entry', 'ignore_times' -%><%= label(:board_entry, :ignore_times, _('Hide Time')) %></p>
  </div>
  <div style="clear: left"></div>
</div>

<div class="input_line" id="show_option">
<p><a href="#" id="show_option_link"><%= _('Show Option') %></a></p>
</div>

<div class="input_line input_option invisible">
  <div class="input_label" style="height: 3em;"><%= label_tag("trackbacks", _('Topic Entry')) %></div>
  <div class="input_value">
    <div id="option_space">
      <p><%= text_field_tag 'trackbacks', params[:trackbacks], {:size => 60} %></p>
      <p><%= _('(Provide page IDs in comma separated format. e.g. 1123,1124)')%></p>
    </div>
  </div>
  <div style="clear: left"></div>
</div>

<div class="input_line">
  <div class="input_label" style="height: 3em;" id="input_label_publication"><%= _('Privacy Settings')%></div>
  <div class="input_value" id="input_value_publication"><table><tr><td>
    <% display_type = (@board_entry.owner_is_public? ? "" : "none") %>
    <% if @board_entry.diary? %>
      <%= radio_button_tag("publication_type", "private", params[:publication_type] == "private", :id=>"publication_type_private") -%><%= label_tag("publication_type_private", _("Owner Only")) %>
      <%= "&nbsp;|&nbsp;" %>
      <span style="display:<%= display_type %>">
        <%= radio_button_tag("publication_type", "public", params[:publication_type] == "public", :id=>"publication_type_public") -%><%= label_tag("publication_type_public", _('Open to All')) %>
      </span>
      <%= radio_button_tag("publication_type", "protected", params[:publication_type] == "protected", :id=>"publication_type_protected") %><%= label_tag("publication_type_protected", _('Specify Directly')) %>
    <% else -%>
      <%= radio_button_tag("publication_type", "protected", params[:publication_symbols_value] == current_user.symbol, :id=>"publication_type_owner_only") %><%= label_tag("publication_type_owner_only", _('Owner Only')) %>
      <%= "&nbsp;|&nbsp;" %>
      <span style="display:<%= display_type %>">
        <%= radio_button_tag("publication_type", "public", params[:publication_type] == "public", :id=>"publication_type_public") -%><%= label_tag("publication_type_public", _('Open to All')) %>
      </span>
      <%= radio_button_tag("publication_type", "private", params[:publication_type] == "private", :id=>"publication_type_private") -%><%= label_tag("publication_type_private", _("Members Only")) %>
      <%= radio_button_tag("publication_type", "protected", (params[:publication_type] == "protected" && params[:publication_symbols_value] != current_user.symbol), :id=>"publication_type_protected") %><%= label_tag("publication_type_protected", _('Specify Directly')) %>
    <% end -%>

    <div id="editor_symbols_space" style="display: none; margin-top: 5px;">
      <%= check_box_tag 'editor_symbol', @board_entry.symbol, params[:editor_symbol] %><%= label_tag :editor_symbol, _('Edit by Members Allowed') %>
    </div>
    <%= render :partial => "shared/symbol_autocomplete_field", :locals => {:publication_symbols_value => params[:publication_symbols_value], :editor_symbols_value => params[:editor_symbols_value], :edit_checkbox => true } %>
    </td></tr></table>
  </div>
  <div style="clear: left"></div>
</div>

<% content_for :javascript_initializers do -%>
  <% categories_hash = @board_entry.categories_hash(current_user) -%>
    var setupTagComplete = function() {
        var tags = new Array(<%= categories_hash[:mine].map{|str| ("'#{str}'")}.join(',') %>);
        var stdTags = new Array(<%= categories_hash[:standard].map{|str| ("'#{str}'")}.join(',') %>);
        var userTags = new Array(<%= categories_hash[:user].map{|str| ("'#{str}'")}.join(',') %>);

        $j('#tags_list').append(createTagsLink(tags));
        $j('#std_tags_list').append(createTagsLink(stdTags));
        $j('#user_tags_list').append(createTagsLink(userTags));

        // タグ処理
        $j('#board_entry_category').jTagging($j('#tags_list'));
        $j('#board_entry_category').jTagging($j('#std_tags_list'));
        $j('#board_entry_category').jTagging($j('#user_tags_list'));
    };
    setupTagComplete();

    // 入力フォームのチェック
    $j('#board_entry_form')
    .submit(function (){
        if ($j('#publication_type_public:checked').size() > 0){
            $j('#publication_symbols_value').val("");
            $j('#editor_symbols_value').val("");
        }

        var no_tb_array = new Array();
        var tb_array = $j('#trackbacks').val().split(',');

        var contents_value;
        if ($j('#editor_mode_richtext:checked').size() > 0) {
            contents_value = $j('#contents_richtext').val();
        } else {
            contents_value = $j('#contents_hiki').val();
        }

        for(i=0; i < tb_array.length; i++){
            var tb = Trim(tb_array[i]);
            if(tb != ""){
                if (isNaN(tb)){
                    alert('<%= _('Illegal format in "Topic entry". List the page IDs and separate each other by commas.')%>');
                    return false;
                }
                if (contents_value.match(new RegExp("page:" + tb + ".*]")) == null) {
                    no_tb_array.push(tb);
                }
            }
        }

        if ($j('#publication_type_protected:checked').size() > 0){
            if ($j('#publication_symbols_value').val() == ""){
                if (confirm("<%= _('No user selected. Are you sure to make this open to all users?')%>") == true) {
                    $j('#publication_type_public').attr('checked',true);
                    changePublicationType();
                } else {
                    return false;
                }
            }
        }

        if ($j('#publication_type_public:checked').size() > 0 && $j('#board_entry_send_mail:checked').size() > 0) {
            if (!confirm('<%= _('Are you sure to send email to all users? (%s users)') % User.active.count %>'))
                return false;
        }

        if ($j('#publication_type_owner_only:checked').length > 0) {
          $j('#publication_symbols_value').val('<%= current_user.symbol %>');
        }

        // 作成or更新によるページ遷移は警告しない
        $j(window).unbind('beforeunload');
    });
    var Trim = function(str){
        str = str.replace(/^[ 　]+/,"");
        str = str.replace(/[ 　]+$/,"");
        return(str);
    }

    // 公開範囲のチェックボックス
    var show_editable = <%= @board_entry.diary? ? "false" : "true" -%>;
    var changePublicationType = function() {
        if ($j('#publication_type_protected:checked').length > 0) {
            $j('#editor_symbols_space').hide();
            $j('#publication_symbols_space').show();
            $j('#publication_symbol').focus();
        } else {
            $j('#publication_symbols_space').hide();
            if (show_editable) {
                $j('#editor_symbols_space').show();
            }
        }
        $j('#publication_status').css('color', '#555');
        if ($j('#publication_type_protected:checked').length > 0)
          $j('#publication_status').text($j('label[for=publication_type_protected]').text());
        if ($j('#publication_type_private:checked').length > 0)
          $j('#publication_status').text($j('label[for=publication_type_private]').text());
        if ($j('#publication_type_public:checked').length > 0) {
          $j('#publication_status').text($j('label[for=publication_type_public]').text());
          <% if @board_entry.owner_is_group? && @board_entry.load_owner.default_publication_type == 'private' -%>
            $j('#publication_status').css('color', 'red');
          <% end -%>
        }
        if ($j('#publication_type_owner_only:checked').length > 0)
          $j('#publication_status').text($j('label[for=publication_type_owner_only]').text());
    };
    changePublicationType();

    <% unless SkipEmbedded::InitialSettings['mail']['enable_send_email_to_all_users'] -%>
    // メール送信チェックボックスの表示制御
    var toggleSendMail = function() {
    <% if @board_entry.diary? -%>
      if ($j('#publication_type_protected:checked').length > 0) {
        $j('span.send_mail_field').show();
      } else {
        $j('span.send_mail_field').hide();
        $j('#board_entry_send_mail').attr('checked', false);
      }
    <% else -%>
      if ($j('#publication_type_public:checked').length > 0) {
        $j('span.send_mail_field').hide();
        $j('#board_entry_send_mail').attr('checked', false);
      } else {
        $j('span.send_mail_field').show();
      }
    <% end -%>
    };
    toggleSendMail();
    <% end -%>

    $j('#publication_type_public, #publication_type_protected, #publication_type_private, #publication_type_owner_only').live('click', function(){
      <% unless SkipEmbedded::InitialSettings['mail']['enable_send_email_to_all_users'] -%>
        toggleSendMail();
      <% end -%>
        changePublicationType();
    });

    // タグsuggestのスライド表示
    $j('#board_entry_category')
    .focus(function(){
        showCategoryBox();
    });
    $j('#board_entry_title, #contents_hiki, #contents_richtext')
    .focus(function(){
        hideCategoryBox();
    });
    changeEditorMode();

    // オプション入力項目の表示制御
    $j('#show_option_link')
    .click(function() {
        $j('div.input_option').show();
        $j('#show_option').hide();
        return false;
    });

    var isShowOptions = function() {
        var isNewRecord = <%= !!(@board_entry.new_record?) %>;
        return !isNewRecord || $j('#trackbacks').val() != '';
    };

    if(isShowOptions())
        $j('#show_option_link').click();

    $j(window).bind('beforeunload', function(e){
      return e.originalEvent.returnValue = '<%= _('All changes will be discarded if you navigate away from this page.') %>';
    });
<% end -%>
