<% content_for :contents_left do -%>
  <div class="box_space">
    <div class="box_space_title"><%= icon_tag 'find' %><%= _('Search')%></div>
      <div class="box_space_body">
      <% form_tag({:controller => 'user', :action => 'bookmark', :user_id => params[:user_id]}, {:method => 'get'}) do -%>
        <%= text_field_tag('keyword', params[:keyword], :size=>'12') %>
        <%= submit_tag _('Search') %>
      <% end -%>
      <div class="desc ui-corner-all"><%= _('The search targets are titles and comments')%></div>
    </div>
    <div class="box_space_bottom"></div>
  </div><!-- box_space -->

  <% @bookmark_types = [
     {:name => _('Stars'), :type => 'star', :icon => 'star'},
     {:name => _('Entries'), :type => 'page', :icon => 'report_link'},
     {:name => _('Internet'), :type => 'internet', :icon => 'world_link'} ] -%>

  <div class="box_space">
    <div class="box_space_title"><%= icon_tag 'text_list_bullets' %><%= _('Types')%></div>
    <div class="box_space_body">
      <ul>
        <% @bookmark_types.each do |bookmark_type| -%>
        <li style='<%= "background-color: yellow" if params[:type] == bookmark_type[:type] %>'>
        <%= icon_tag bookmark_type[:icon] %><%= link_to bookmark_type[:name], {:controller => 'user', :action=>'bookmark', :type=>bookmark_type[:type], :user_id => params[:user_id]} %>
        </li>
        <% end -%>
      </ul>
    </div>
    <div class="box_space_bottom"><%= link_to _("[Cancel selection]"), {:controller => 'user', :action=>'bookmark', :user_id => params[:user_id]} %></div>
  </div><!-- box_space -->

  <%= render :partial => 'tag_cloud_box' %>
<% end -%>

<% content_for :contents_right do -%>
  <% unless @bookmark_comments.empty? -%>
  <%= i18n_will_paginate_with_container_wrapper @bookmarks %>
    <% for comment in @bookmark_comments -%>
    <div class="bookmark_space" id="bookmark_comment_<%= comment.id %>">
      <div class="header">
        <%=h comment.created_on.strftime(_("%B %d %Y")) %>
        <span class="other_user_count"><%= link_to(_("[Other users: %{count} users]") % {:count => comment.bookmark.bookmark_comments_count} , url_for_bookmark(comment.bookmark)) %></span>
      </div>
      <div class="title">
        <% if @user == current_user -%>
        <% elem_id = "bookmark_comment_stared_#{comment.id}" -%>
        <span id="<%= elem_id %>"><%= render :partial => "stared", :locals => {:bookmark_comment => comment} %></span>
        <% end -%>
        <%= link_to_bookmark_url comment.bookmark %>
        <%= bookmark_comment_tag_search_links_tag comment.tags, :max => 3 %>
      </div>
      <div class="description">
        <%=h comment.comment %>
        <% if @current_user.id == comment.user_id %>
          <% new_bookmark_url_hash = {:controller => "bookmark", :action => "new_without_bookmarklet", :url => comment.bookmark.escaped_url, :title => h(comment.bookmark.title)} -%>
          <%= link_to(icon_tag('tag_blue_edit', :title => _('Edit')), new_bookmark_url_hash, {:onclick => "sub_window_open('#{url_for(new_bookmark_url_hash)}', 'subwindow', 550, 400); return false;"}) %>
          <%= link_to_function icon_tag('tag_blue_delete', :title => _('Delete')),"if (confirm('" + _("Are you sure to delete?") + "')) { var f = document.createElement('form'); this.parentNode.appendChild(f); f.method = 'POST';f.action = '#{url_for(:controller =>'bookmark', :action =>'destroy', :uri => comment.bookmark.escaped_url, :comment_id => comment.id)}'; var input = document.createElement('input');  input.type = 'hidden'; input.name = 'authenticity_token'; input.value = '#{form_authenticity_token}'; f.appendChild(input); f.submit();}",:href => url_for(:controller =>'bookmark', :action =>'destroy'), :title => _("Delete")  %>
        <% end %>
      </div>
    </div>
    <% end -%>
  <%= i18n_will_paginate_with_container_wrapper @bookmarks %>
  <% end %>
<% end -%>

<% content_for :javascript_initializers do -%>
    <%# TODO application.jsに移動する %>
    var setupBookmarkStar = function(){
      $j('.bookmark_star')
      .click(function() {
          var bookmark_comment_id = this.id.split('_')[3];
          var stared = $j(this).children().hasClass('ss_award_star_silver_2');
          $j.ajax({
              type: 'POST',
              url: '<%= url_for(:controller => 'bookmark', :action => 'ado_set_stared') -%>',
              data: {
                bookmark_comment_id : bookmark_comment_id,
                stared : stared,
                authenticity_token: $j("input[name=authenticity_token]").val() },
              success: function(html) {
                  $j('#bookmark_comment_stared_' + bookmark_comment_id).html(html);
                  $j('#bookmark_comment_' + bookmark_comment_id).highlight();
                  $j('.bookmark_star').unbind('click');
                  setupBookmarkStar();
              }
          });
          return false;
      });
    };
    setupBookmarkStar();
<% end -%>
