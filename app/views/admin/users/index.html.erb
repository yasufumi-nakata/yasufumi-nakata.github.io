<div class="box"><%= _('You can create new user and edit / view existing user profiles.') %></div>

<% menu_links = [] -%>
<% if login_mode?(:password) -%>
<% menu_links << link_to(_('New %{model}') % {:model => _('user')}, new_admin_user_path) -%>
<% menu_links << link_to(_('New users from CSV'), import_new_admin_user_path) -%>
<% elsif login_mode?(:fixed_rp) -%>
<% menu_links << link_to(_('New %{model}') % {:model => _('user')}, new_admin_user_path) -%>
<% end -%>
<p><%= menu_links.join(' | ') %></p>

<div class="box tabular">
  <% columns = %w(code uid name email section status admin locked issued_at last_authenticated_at password_expires_at) -%>
  <% columns.delete_if{|a| a=="uid"} unless SkipEmbedded::InitialSettings['username_use_setting'] %>

  <%= render :partial => '/admin/search_box', :locals => { :class_name => 'Admin::User' } %>
  <% form_tag issue_activation_codes_admin_users_path do -%>
  <%= render :partial => '/admin/shared/sortable_table',
             :locals => {
               :use_ids => true,
               :columns => columns,
               :hide_columns => %w(locked issued_at last_authenticated_at password_expires_at),
               :disp_columns_proc => lambda do |object,column|
      case column
      when "uid"
        h(object.username)
      when "status"
        if object.unused?
          if !object.activation_token.nil? and object.within_time_limit_of_activation_token?
            signup_url = signup_url(object.activation_token)
            _('To be activated') + "(" + link_to(_('Confirm'), h(signup_url)) + ")"
          else
            issue_link_str = SkipEmbedded::InitialSettings['mail']['show_mail_function'] ? _('Notify activation') : _('Prepare for activation')
            issue_link = link_to(issue_link_str, issue_activation_code_admin_user_path(object), :class => 'issue_activation_code_link')
            if login_mode?(:password)
              s_("User|Status|#{object.status}") + "(#{issue_link})"
            else
              s_("User|Status|#{object.status}")
            end
          end
        else
          s_("User|Status|#{object.status}")
        end
      when "admin"
        s_("User|Admin|#{object.admin}")
      when "locked"
        s_("User|Locked|#{object.locked}")
      when "issued_at", "last_authenticated_at", "password_expires_at"
        time = object.send(column.to_sym)
        time.blank? ? '' : time.strftime(_('%m/%d/%Y %H:%M'))
      else
        object.send(column.to_sym)
      end
    end,
               :objects => @users,
               :class_name => 'Admin::User',
               :link_elem_size => 3,
               :link_elem_proc => lambda { |object|
      result = ""
      result << content_tag(:td, link_to(_("Edit"), edit_admin_user_path(object)) )
      result << content_tag(:td, link_to(_('Image'), new_admin_user_pictures_path(object)), :class => 'add_new_picture')
      result << content_tag(:td, link_to(_("Destroy"), object, {:confirm => _('Are you sure?'), :method => :delete}) ) if object.unused?
      result
    }
              }
  -%>
  <%= submit_tag SkipEmbedded::InitialSettings['mail']['show_mail_function'] ? _('Send activation email to selected users') : _('Issue activation url for selected users') %>
  <% end -%>
</div>

<% content_for :javascript_initializers do -%>
    $j('.issue_activation_code_link')
    .click(function() {
        return confirm('<%= SkipEmbedded::InitialSettings['mail']['show_mail_function'] ? _('Are you sure to send activation email to target user?') : _('Activation URL is to be issued. Send the URL shown by clicking the confirmation link in the next screen to the user.') %>');
    });
<% end -%>
